{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["salida","stateCss","degrees","Formulario","useState","nombre","apellido","datoSalida","datos","setDatos","className","type","placeholder","onChange","event","target","name","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAGIA,EAAS,GACTC,EAAW,GACXC,EAAU,GAmDCC,EAlDI,WAEjB,MAA0BC,mBAAS,CAC/BC,OAAQ,GACRC,SAAU,GACVC,WAAY,KAHhB,mBAAOC,EAAP,KAAcC,EAAd,KAkCA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACI,kDACI,qBAAKA,UAAU,WAAf,SACI,uBAAOC,KAAK,OAAOC,YAAY,mBAAgBC,SAhCrC,SAACC,GACvBL,EAAS,2BACFD,GADC,kBAEHM,EAAMC,OAAOC,KAAQF,EAAMC,OAAOE,SAGpCH,EAAMC,OAAOE,MAAM,IACpBjB,EAAO,MACPC,EAAW,MACXC,EAAUY,EAAMC,OAAOE,OAChBH,EAAMC,OAAOE,MAAM,GAC1BjB,EAAO,SACPC,EAAW,SACXC,EAAUY,EAAMC,OAAOE,OAChBH,EAAMC,OAAOE,MAAM,GAC1BjB,EAAO,QACPC,EAAW,QACXC,EAAUY,EAAMC,OAAOE,QAGvBjB,EAAO,GACPC,EAAW,GACXC,EAAUY,EAAMC,OAAOE,QAU+DD,KAAK,aAEzF,uBACA,sBAAKN,UAAWT,EAAhB,gBAA8BC,EAA9B,4BAA6DF,EAA7D,oBCtCKkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4bd64c25.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nlet salida = \"\";\nlet stateCss = \"\";\nlet degrees = \"\";\nconst Formulario = () => {\n\n  const [datos, setDatos] = useState({\n      nombre: '',\n      apellido: '',\n      datoSalida: ''\n  })\n\n\n  const handleInputChange = (event) => {\n      setDatos({\n          ...datos,\n          [event.target.name] : event.target.value\n      })\n\n      if(event.target.value>99){\n        salida=\"Gas\";\n        stateCss = \"Gas\";\n        degrees = event.target.value;\n      }else if(event.target.value>0){\n        salida=\"Liquid\";\n        stateCss = \"Liquid\";\n        degrees = event.target.value;\n      }else if(event.target.value<0){\n        salida=\"Solid\";\n        stateCss = \"Solid\";\n        degrees = event.target.value;\n      }\n      else{\n        salida=\"\";\n        stateCss = '';\n        degrees = event.target.value;\n      }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <h1>Estados del agua</h1>\n              <div className=\"col-md-3\">\n                  <input type=\"text\" placeholder=\"° Centigrados\" onChange={handleInputChange} name=\"nombre\"></input>\n              </div>\n          <br/>\n          <div className={stateCss}>At {degrees} °C the water is in \" {salida} \" state</div>\n      </header>\n    </div>\n  );\n}\n\nexport default Formulario;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}